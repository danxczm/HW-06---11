{"mappings":"YAgBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,SAAUA,EAAUC,MAAOA,IAEDG,EAA7B,CAAEJ,SAAUA,EAAUC,MAAOA,MAErCA,MAWP,SAASQ,EAASC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC5BU,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OAG5D,SAASa,EAAUJ,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,QAAQC,IAAI,sBAAqCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OAzC1Cc,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAyBC,GACvBA,EAAMC,iBAEN,IAAMC,EAAcF,EAAMG,cAAcC,SAEpCrB,IAAUmB,EAAYnB,MAAMsB,MAC5BC,IAASJ,EAAYI,KAAKD,MAC1BE,IAAWL,EAAYK,OAAOF,OAkBpC,SAAuBtB,EAAOuB,EAAMC,GAClC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,IAC3B3B,EAAc2B,EAAGzB,GAAO0B,KAAKlB,GAAUmB,MAAMd,GAC7Cb,GAASuB,EAnBXK,CAAc5B,EAAOuB,EAAMC,M","sources":["src/js/09/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', getValuesOfForm);\n\nfunction getValuesOfForm(event) {\n  event.preventDefault();\n\n  const formElement = event.currentTarget.elements;\n\n  let delay = ~~formElement.delay.value;\n  let step = ~~formElement.step.value;\n  let amount = ~~formElement.amount.value;\n\n  promiseDefine(delay, step, amount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay }); //те що ми передали (результат) буде записано в \"result\" (then)\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promiseDefine(delay, step, amount) {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay).then(onSucces).catch(onFailure);\n    delay += step;\n  }\n}\n\nfunction onSucces({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onFailure({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$094f1ab8d3685df1$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$094f1ab8d3685df1$var$onSucces","param","console","log","concat","$094f1ab8d3685df1$var$onFailure","document","querySelector","addEventListener","event","preventDefault","formElement","currentTarget","elements","value","step","amount","i","then","catch","$094f1ab8d3685df1$var$promiseDefine"],"version":3,"file":"03-promises.4a364fc9.js.map"}